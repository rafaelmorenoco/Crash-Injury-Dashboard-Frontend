name: Deploy Clean Version to Org Repo

on:
  push:
    branches:
      - dev  # Trigger on pushes to dev branch
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout your personal repository on branch dev.
      - name: Checkout personal repository
        uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0

      # 2. Prepare a clean archive from the current commit.
      - name: Prepare Clean Archive
        run: |
          mkdir deploy
          git archive HEAD | tar -x -C deploy
          
          # Remove files/folders we do NOT want to deploy
          # (Assuming your org repo uses evidence.config.yaml; adjust if necessary.)
          rm -f deploy/evidence.config.yaml
          rm -rf deploy/package

          # Update the /pages files using sed (note the use of '#' as delimiter)
          sed -i "s#'/hexgrid/' || h.GRID_ID AS link#'/Crash-Injury-Dashboard/hexgrid/' || h.GRID_ID AS link#g" deploy/pages/hexgrid/index.md
          sed -i "s#'/anc/' || a.ANC AS link#'/Crash-Injury-Dashboard/anc/' || a.ANC AS link#g" deploy/pages/anc/index.md
          sed -i "s#'/smd/' || smd_2023.SMD AS link#'/Crash-Injury-Dashboard/smd/' || smd_2023.SMD AS link#g" deploy/pages/anc/[ANC].md
          sed -i "s#'/smd/' || a.SMD AS link#'/Crash-Injury-Dashboard/smd/' || a.SMD AS link#g" deploy/pages/smd/index.md

      # 3. Clone the destination organization repository.
      - name: Clone Organization Repository
        run: |
          git clone https://rafaelmorenoco:${{ secrets.ORG_TOKEN }}@github.com/dcvisionzero/Crash-Injury-Dashboard.git org_repo

      # 4. Sync files from the deploy folder into the org repository,
      #    while preserving the files that should not be touched.
      - name: Sync Files to Org Repository
        run: |
          rsync -av --delete \
            --exclude='.git' \
            --exclude='evidence.config.yaml' \
            --exclude='package' \
            --exclude='package.json' \
            --exclude='package-lock.json' \
            --exclude='.github/workflows/deploy-to-gh-pages.yml' \
            deploy/ org_repo/

      # 5. Commit and push the changes to the organization repository.
      - name: Commit and Push Changes
        working-directory: org_repo
        run: |
          # Ensure we are on (or create) the main branch.
          git checkout -B main
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy update from personal dev branch" || echo "No changes to commit"
          git push -u origin main --force

